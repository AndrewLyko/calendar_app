version: "3.9"

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

services:
  db:
    image: library/postgres:13.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/envs/.env.db.dev
    networks:
      - backend

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
    networks:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/usr/src/app/
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    environment:
      - REDIS_HOST=redis
    ports:
      - 8000:8000
    env_file:
      - ./backend/envs/.env.dev
    depends_on:
      - db
      - redis
    restart: "on-failure"
    networks:
      - backend
#      - frontend
#
#  frontend:
#    build: ./frontend
#    volumes:
#      - './frontend:/app'
#      - '/app/node_modules'
#    ports:
#      - 3000:3000
#    stdin_open: true
#    tty: true
#    env_file:
#      - ./frontend/envs/fe.env.dev
#    command: npm start
#    networks:
#      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redisdata:
